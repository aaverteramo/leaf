-0<Node>              b0 | 1    | 3 nested <-- 4 before first end
-1    <Node>          b1 |  2   | 2 nested <-- 3 before first end
-2        <Node>      b2 |   3  | 1 nested <-- 2 before first end
-3            <Node>  b3 |    4 | 0 nested <-- 1 before first end
-3            </Node> e0 |    4 |
-2        </Node>     e1 |   3  |
-1    </Node>         e2 |  2   |
-1    <Node>          b4 |  2   | 0 nested <-- 1 before next end
-1    </Node>         e3 |  2   |
-0</Node>             e4 | 1    |
  
  <Node>              b0 | 1    | 0 nested <-- 1 before next end
  </Node>             e1 | 1    |
  <Node>              b1 | 2    | 0 nested <-- 1 before next end
  </Node>             e1 | 2    |


How to calculate "nested" bool
var hasNested = nextBegin < firstEnd

<Node>

if (next begin Node
	<Node>
	has an index that is less than the end node at same index,
	Get next begin node
		<Node>
		""
			<Node>
			""
	
	
{Begin:True, Index:2, Nested:0}
{Begin:True, Index:14, Nested:-1}
{Begin:True, Index:30, Nested:-2}
{Begin:True, Index:50, Nested:-3}
{Begin:False, Index:70, Nested:-3}
{Begin:False, Index:87, Nested:-2}
{Begin:False, Index:100, Nested:-1}
{Begin:True, Index:113, Nested:-1}
{Begin:False, Index:125, Nested:-1}
{Begin:False, Index:134, Nested:0}
